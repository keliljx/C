#include<iostream>
#include<queue>
using namespace std;

queue<int> q1;
int m,n;
int step[10001];

void init();
int bfs();
int canmoveto(int u,int dire);
int moveto(int u,int dire);

int main()
{
	int num=0;
	cin>>m>>n;
	init();
	num=bfs();
	cout<<num<<endl;
	return 0;
}

void init()
{
	for(int i=0;i<10001;i++)
	{
		step[i]=-1;
	}
	q1.push(m);
	step[m]=0;
}

int bfs()
{
	int u,v,i;
	while(!q1.empty())
	{
		u=q1.front();
		q1.pop();
		for(i=0;i<3;i++)
		{
			if(canmoveto(u,i))
			{
				v=moveto(u,i);
				if(v==n)
				{
					return(step[u]+1);
				}
				if(step[v]==-1)
				{
					q1.push(v);
					step[v]=step[u]+1;
				}
			}
		}
	}
	return -1;
}

int canmoveto(int u,int dire)
{
	int v;
	if(dire==0)
	{
		v=u+1;
	}
	else if(dire==1)
	{
		v=u+u;
	}
	else
	{
		v=u*u;
	}
	if(v<=n&&step[v]==-1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

int moveto(int u,int dire)
{
	int v;
	if(dire==0)
	{
		v=u+1;
	}
	else if(dire==1)
	{
		v=u+u;
	}
	else
	{
		v=u*u;
	}
	return v;
}