#include<stdio.h>

int f(int c, int a, int b);
int funand(int a, int b);			//实现“且”的函数
int funor(int a, int b);			//实现“或”的函数
int funimplication(int a, int b);	//实现“蕴含”的函数
int funequivalence(int a, int b);	//实现“等值”的函数

int main()
{
	int i, j, c;
	scanf("%d", &c);
	for(i = 0; i < 2; i++)
	{
		for(j = 0; j < 2; j++)
		{
			printf("%d %d %d\n", i, j, f(c, i, j));
		}
	}

	return 0;
}

int f(int c, int a, int b)
{
	int value;
	switch(c)
	{
	case 0:
		value = funand(a, b);
		break;
	case 1:
		value = funor(a, b);
		break;
	case 2:
		value = funimplication(a, b);
		break;
	case 3:
		value = funequivalence(a, b);
		break;
	default:
		break;
	}
	return value;
}

int funand(int a, int b)		//实现“且”的函数
{
	if(a == 1 && b == 1)
		return 1;
	else
		return 0;
}

int funor(int a, int b)		//实现“或”的函数
{
	if(a == 0 && b == 0)
		return 0;
	else
		return 1;
}

int funimplication(int a, int b)		//实现“蕴含”的函数
{
	if(a == 1 && b == 0)
		return 0;
	else
		return 1;
}

int funequivalence(int a, int b)		//实现“等值”的函数
{
	if((a == 0 && b == 0) || (a == 1 && b == 1))
		return 1;
	else
		return 0;
}
