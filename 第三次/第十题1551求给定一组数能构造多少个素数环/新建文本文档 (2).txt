#include<iostream>
#include<vector>

using namespace std;

int num, n;
vector <int> a;
vector <int> b;

void search(int m);
bool IsPrime(int t);
void swap(int a1, int a2);
bool can();

int main() {
	cin>>n;
	
	a.resize(n);
	for (int i = 0; i < n; i ++) {
		cin>>a[i];
	} 
	
	b.resize(40);
	for (int i = 0; i < 40; i ++) {
		b[i] = 0;
	}
	
	for(int i = 2; i < 40; i ++) {
		if(IsPrime(i)) {      // 若为素数，则对应数组下标值为1 
			b[i] = 1;
		} 
	}
	
	search(1);
	
	cout<<num<<endl;
	
	return 0;
} 

void search(int m) {
	if(m == n) {
		if(can()) {
			num ++;
		}
	}
	else {
		for(int i = m; i < n; i ++) {
			if(b[(a[m - 1] + a[i])]== 1) {
				swap(i, m);
				search(m + 1);
				swap(i, m);
			}
		}
	}
}

bool IsPrime(int t) {
	for (int i = 2; i < t; i ++) {
		if(t % i == 0) {
			return false;
		}
	}
	return true;
}

void swap(int a1, int a2) {
	int temp;
	
	temp = a[a1];
	a[a1] = a[a2];
	a[a2] = temp;
}

bool can() {
	if(b[(a[n - 1] + a[0])]== 0) {
		return false;
	}
	
	for(int i = 1; i < n; i ++) {
		if(b[(a[i] + a[i - 1])] == 0) {
			return false;
		}
	}
	return true;
}